version: 2.1

defaults:
  environment: &default_env
    ALPINE_VERSION: "3.17"
    S6_V: v1.18.1.5

executors:
  base:
    shell: /bin/bash
    docker:
      - image: cimg/base:2023.01

jobs:
  alpine:
    executor: base

    environment:
      <<: *default_env
      CONTAINER_NAME: quay.io/redsift/baseos-alpine

    steps:
      - checkout
      - setup_remote_docker
      - run: docker login -u $QUAY_USER -p $QUAY_PASS quay.io
      - run:
          name: Build container
          command: |
            VERSION=$(git describe --exact-match --tags 2>/dev/null || git rev-parse --short HEAD)
            docker build --build-arg=VERSION=$ALPINE_VERSION -t ${CONTAINER_NAME} alpine
            for TAG in $VERSION $CIRCLE_BRANCH $ALPINE_VERSION; do
              docker tag ${CONTAINER_NAME}:latest ${CONTAINER_NAME}:${TAG}
            done

      - run:
          name: Test container
          command: |
            docker run -d ${CONTAINER_NAME} true

      - run:
          name: Push container to the registry
          command: |
            docker push -q -a ${CONTAINER_NAME}

      # todo: trigger build of dependant images

  alpine-rocksdb:
    executor: base

    environment:
      <<: *default_env
      CONTAINER_NAME: quay.io/redsift/alpine-rocksdb

    steps:
      - checkout
      - setup_remote_docker
      - run: docker login -u $QUAY_USER -p $QUAY_PASS quay.io
      - run:
          name: Build container
          command: |
            VERSION=$(git describe --exact-match --tags 2>/dev/null || git rev-parse --short HEAD)
            docker build --build-arg=VERSION="$ALPINE_VERSION" -t ${CONTAINER_NAME} alpine-rocksdb
            for TAG in "$VERSION" "$CIRCLE_BRANCH" "$ALPINE_VERSION"; do
              docker tag ${CONTAINER_NAME}:latest "${CONTAINER_NAME}:${TAG}"
            done
      - run:
          name: Test container
          command: |
            docker run ${CONTAINER_NAME} true
      - run:
          name: Push container to the registry
          command: |
            docker push -q -a ${CONTAINER_NAME}

      # todo: trigger build of dependant images

  ubuntu:
    executor: base

    environment:
      <<: *default_env
      CONTAINER_NAME: quay.io/redsift/baseos

    steps:
      - checkout
      - setup_remote_docker
      - run: cd root; curl -k -L https://github.com/just-containers/s6-overlay/releases/download/$S6_V/s6-overlay-amd64.tar.gz | tar xz
      - run:
          command: |
            SHA="${CIRCLE_SHA1:0:7}"
            branch=(${CIRCLE_BRANCH/-/ }) # release-1 => release
            export imageName=$CONTAINER_NAME:$SHA

            docker build -t $imageName ubuntu
            suffix="beta"
            if [[ "$branch" == "release" ]]; then
              suffix="latest"
            fi
            echo "Tagging as $CONTAINER_NAME:${suffix}"
            docker tag $imageName $CONTAINER_NAME:${suffix}
      - run: docker login -u $QUAY_USER -p $QUAY_PASS quay.io
      - run: docker push -q -a $CONTAINER_NAME

      # todo: trigger build of dependant images

workflows:
  version: 2
  build:
    jobs:
      - alpine:
          context: org-global
          requires:
            - alpine-rocksdb

      - alpine-rocksdb:
          context: org-global

      - ubuntu:
          context: org-global
